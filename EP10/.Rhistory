cat(round(apal_medio, 3), ")", "\n", sep = "" )
print(rownames(conjunto_final_60_entrenamiento[sospechoso3, ]))
cat("------------------------------------------------\n")
#Verificamos la independencia de los residuos
print(durbinWatsonTest(modelo_final, max.lag = 5))
#Detectamos posibles valores atipicos
plot(modelo_final)
# Obtenemos residuos y las estadisticas
resultados <- data.frame(respuesta_predicha = fitted(modelo_final))
resultados[["residuos_estandarizados"]] <- rstandard(modelo_final)
resultados[["residuos_estudiantizados"]] <- rstudent(modelo_final)
resultados[["distancia_Cook"]] <- cooks.distance(modelo_final)
resultados[["dfBeta"]] <- dfbeta(modelo_final)
resultados[["dffit"]] <- dffits(modelo_final)
resultados[["apalancamiento"]] <- hatvalues(modelo_final)
resultados[["covratio"]] <- covratio(modelo_final)
# Buscamos las observciones con residuos estandarizados fuera del 95% esperado
sospechoso1 <- which(abs(resultados[["residuos_estandarizados"]]) > 1.96)
sospechoso1 <- sort(sospechoso1)
cat("- Residuos estandarizados fuera del 95% esperado: ", sospechoso1, "\n")
print(rownames(conjunto_final_60_entrenamiento[sospechoso1, ]))
cat("------------------------------------------------\n")
# Buscamos observaciones con distancia de Cook mayor a 1
sospechoso2 <- which(resultados[["distancia_cook"]] > 1)
cat("- Residuos con una distancia de Cook alta:", sospechoso2, "\n")
print(rownames(conjunto_final_60_entrenamiento[sospechoso2, ]))
cat("------------------------------------------------\n")
# Buscamos observaciones con apalancamiento mayor igual al doble o triple del apalacamiento promedio
apal_medio <- (ncol(conjunto_final_60_entrenamiento)) / nrow(muestra_h)
sospechoso3 <- which(resultados[["apalancamiento"]] > apal_medio)
sospechoso3 <- sort(sospechoso3)
cat("- Residuos con apalancamiento fuera del rango (>")
cat(round(apal_medio, 3), ")", "\n", sep = "" )
print(rownames(conjunto_final_60_entrenamiento[sospechoso3, ]))
cat("------------------------------------------------\n")
#Verificamos la independencia de los residuos
print(durbinWatsonTest(modelo_final, max.lag = 5))
#Detectamos posibles valores atipicos
plot(modelo_final)
# Obtenemos residuos y las estadisticas
resultados <- data.frame(respuesta_predicha = fitted(modelo_final))
resultados[["residuos_estandarizados"]] <- rstandard(modelo_final)
resultados[["residuos_estudiantizados"]] <- rstudent(modelo_final)
resultados[["distancia_Cook"]] <- cooks.distance(modelo_final)
resultados[["dfBeta"]] <- dfbeta(modelo_final)
resultados[["dffit"]] <- dffits(modelo_final)
resultados[["apalancamiento"]] <- hatvalues(modelo_final)
resultados[["covratio"]] <- covratio(modelo_final)
# Buscamos las observciones con residuos estandarizados fuera del 95% esperado
sospechoso1 <- which(abs(resultados[["residuos_estandarizados"]]) > 1.96)
sospechoso1 <- sort(sospechoso1)
cat("- Residuos estandarizados fuera del 95% esperado: ", sospechoso1, "\n")
print(rownames(conjunto_final_60_entrenamiento[sospechoso1, ]))
cat("------------------------------------------------\n")
# Buscamos observaciones con distancia de Cook mayor a 1
sospechoso2 <- which(resultados[["distancia_cook"]] > 1)
cat("- Residuos con una distancia de Cook alta:", sospechoso2, "\n")
print(rownames(conjunto_final_60_entrenamiento[sospechoso2, ]))
cat("------------------------------------------------\n")
# Buscamos observaciones con apalancamiento mayor igual al doble o triple del apalacamiento promedio
apal_medio <- (ncol(conjunto_final_60_entrenamiento)) / nrow(muestra_h)
sospechoso3 <- which(resultados[["apalancamiento"]] > apal_medio)
sospechoso3 <- sort(sospechoso3)
cat("- Residuos con apalancamiento fuera del rango (>")
cat(round(apal_medio, 3), ")", "\n", sep = "" )
print(rownames(conjunto_final_60_entrenamiento[sospechoso3, ]))
cat("------------------------------------------------\n")
# Revisar datos con DFbeta >= 1
sospechoso4 <- which(apply(resultados[["dfBeta"]] >= 1, 1, any))
sospechoso4 <- sort(sospechoso4)
names(sospechoso4) <- NULL
cat("- Residuos con DFBeta >= 1:", sospechoso4, "\n")
print(rownames(conjunto_final_60_entrenamiento[sospechoso4, ]))
cat("------------------------------------------------\n")
#Verificamos la independencia de los residuos
print(durbinWatsonTest(modelo_final, max.lag = 5))
#Detectamos posibles valores atipicos
plot(modelo_final)
# Obtenemos residuos y las estadisticas
resultados <- data.frame(respuesta_predicha = fitted(modelo_final))
resultados[["residuos_estandarizados"]] <- rstandard(modelo_final)
resultados[["residuos_estudiantizados"]] <- rstudent(modelo_final)
resultados[["distancia_Cook"]] <- cooks.distance(modelo_final)
resultados[["dfBeta"]] <- dfbeta(modelo_final)
resultados[["dffit"]] <- dffits(modelo_final)
resultados[["apalancamiento"]] <- hatvalues(modelo_final)
resultados[["covratio"]] <- covratio(modelo_final)
# Buscamos las observciones con residuos estandarizados fuera del 95% esperado
sospechoso1 <- which(abs(resultados[["residuos_estandarizados"]]) > 1.96)
sospechoso1 <- sort(sospechoso1)
cat("- Residuos estandarizados fuera del 95% esperado: ", sospechoso1, "\n")
print(rownames(conjunto_final_60_entrenamiento[sospechoso1, ]))
cat("------------------------------------------------\n")
# Buscamos observaciones con distancia de Cook mayor a 1
sospechoso2 <- which(resultados[["distancia_cook"]] > 1)
cat("- Residuos con una distancia de Cook alta:", sospechoso2, "\n")
print(rownames(conjunto_final_60_entrenamiento[sospechoso2, ]))
cat("------------------------------------------------\n")
# Buscamos observaciones con apalancamiento mayor igual al doble o triple del apalacamiento promedio
apal_medio <- (ncol(conjunto_final_60_entrenamiento)) / nrow(muestra_h)
sospechoso3 <- which(resultados[["apalancamiento"]] > apal_medio)
sospechoso3 <- sort(sospechoso3)
cat("- Residuos con apalancamiento fuera del rango (>")
cat(round(apal_medio, 3), ")", "\n", sep = "" )
print(rownames(conjunto_final_60_entrenamiento[sospechoso3, ]))
cat("------------------------------------------------\n")
# Revisar datos con DFbeta >= 1
sospechoso4 <- which(apply(resultados[["dfBeta"]] >= 1, 1, any))
sospechoso4 <- sort(sospechoso4)
names(sospechoso4) <- NULL
cat("- Residuos con DFBeta >= 1:", sospechoso4, "\n")
print(rownames(conjunto_final_60_entrenamiento[sospechoso4, ]))
cat("------------------------------------------------\n")
# Detalle de las observaciones posiblemente atípicas
sospechosos <- c(sospechoso1, sospechoso2, sospechoso3, sospechoso4)
sospechosos <- sort(unique(sospechosos))
cat("\n\n")
cat("Casos sospechosos")
cat("---------------------------------\n")
print(conjunto_final_60_entrenamiento[sospechosos, ])
cat("\n\n")
print(resultados[sospechosos, ])
#Verificamos la independencia de los residuos
print(durbinWatsonTest(modelo_final, max.lag = 5))
#Detectamos posibles valores atipicos
plot(modelo_final)
# Obtenemos residuos y las estadisticas
resultados <- data.frame(respuesta_predicha = fitted(modelo_final))
resultados[["residuos_estandarizados"]] <- rstandard(modelo_final)
resultados[["residuos_estudiantizados"]] <- rstudent(modelo_final)
resultados[["distancia_Cook"]] <- cooks.distance(modelo_final)
resultados[["dfBeta"]] <- dfbeta(modelo_final)
resultados[["dffit"]] <- dffits(modelo_final)
resultados[["apalancamiento"]] <- hatvalues(modelo_final)
resultados[["covratio"]] <- covratio(modelo_final)
# Buscamos las observciones con residuos estandarizados fuera del 95% esperado
sospechoso1 <- which(abs(resultados[["residuos_estandarizados"]]) > 1.96)
sospechoso1 <- sort(sospechoso1)
cat("- Residuos estandarizados fuera del 95% esperado: ", sospechoso1, "\n")
print(rownames(conjunto_final_60_entrenamiento[sospechoso1, ]))
cat("------------------------------------------------\n")
# Buscamos observaciones con distancia de Cook mayor a 1
sospechoso2 <- which(resultados[["distancia_cook"]] > 1)
cat("- Residuos con una distancia de Cook alta:", sospechoso2, "\n")
print(rownames(conjunto_final_60_entrenamiento[sospechoso2, ]))
cat("------------------------------------------------\n")
# Buscamos observaciones con apalancamiento mayor igual al doble o triple del apalacamiento promedio
apal_medio <- (ncol(conjunto_final_60_entrenamiento)) / nrow(muestra_h)
sospechoso3 <- which(resultados[["apalancamiento"]] > apal_medio)
sospechoso3 <- sort(sospechoso3)
cat("- Residuos con apalancamiento fuera del rango (>")
cat(round(apal_medio, 3), ")", "\n", sep = "" )
print(rownames(conjunto_final_60_entrenamiento[sospechoso3, ]))
cat("------------------------------------------------\n")
# Revisar datos con DFbeta >= 1
sospechoso4 <- which(apply(resultados[["dfBeta"]] >= 1, 1, any))
sospechoso4 <- sort(sospechoso4)
names(sospechoso4) <- NULL
cat("- Residuos con DFBeta >= 1:", sospechoso4, "\n")
print(rownames(conjunto_final_60_entrenamiento[sospechoso4, ]))
cat("------------------------------------------------\n")
# Detalle de las observaciones posiblemente atípicas
sospechosos <- c(sospechoso1, sospechoso2, sospechoso3, sospechoso4)
sospechosos <- sort(unique(sospechosos))
cat("\n\n")
cat("Casos sospechosos\n")
cat("---------------------------------\n")
print(conjunto_final_60_entrenamiento[sospechosos, ])
cat("\n\n")
print(resultados[sospechosos, ])
#Verificamos la independencia de los residuos
print(durbinWatsonTest(modelo_final, max.lag = 5))
#Detectamos posibles valores atipicos
plot(modelo_final)
# Obtenemos residuos y las estadisticas
resultados <- data.frame(respuesta_predicha = fitted(modelo_final))
resultados[["residuos_estandarizados"]] <- rstandard(modelo_final)
resultados[["residuos_estudiantizados"]] <- rstudent(modelo_final)
resultados[["distancia_Cook"]] <- cooks.distance(modelo_final)
resultados[["dfBeta"]] <- dfbeta(modelo_final)
resultados[["dffit"]] <- dffits(modelo_final)
resultados[["apalancamiento"]] <- hatvalues(modelo_final)
resultados[["covratio"]] <- covratio(modelo_final)
# Buscamos las observciones con residuos estandarizados fuera del 95% esperado
sospechoso1 <- which(abs(resultados[["residuos_estandarizados"]]) > 1.96)
sospechoso1 <- sort(sospechoso1)
cat("- Residuos estandarizados fuera del 95% esperado: ", sospechoso1, "\n")
print(rownames(conjunto_final_60_entrenamiento[sospechoso1, ]))
cat("------------------------------------------------\n")
# Buscamos observaciones con distancia de Cook mayor a 1
sospechoso2 <- which(resultados[["distancia_cook"]] > 1)
cat("- Residuos con una distancia de Cook alta:", sospechoso2, "\n")
print(rownames(conjunto_final_60_entrenamiento[sospechoso2, ]))
cat("------------------------------------------------\n")
# Buscamos observaciones con apalancamiento mayor igual al doble o triple del apalacamiento promedio
apal_medio <- (ncol(conjunto_final_60_entrenamiento)) / nrow(muestra_h)
sospechoso3 <- which(resultados[["apalancamiento"]] > apal_medio)
sospechoso3 <- sort(sospechoso3)
cat("- Residuos con apalancamiento fuera del rango (>")
cat(round(apal_medio, 3), ")", "\n", sep = "" )
print(rownames(conjunto_final_60_entrenamiento[sospechoso3, ]))
cat("------------------------------------------------\n")
# Revisar datos con DFbeta >= 1
sospechoso4 <- which(apply(resultados[["dfBeta"]] >= 1, 1, any))
sospechoso4 <- sort(sospechoso4)
names(sospechoso4) <- NULL
cat("- Residuos con DFBeta >= 1:", sospechoso4, "\n")
print(rownames(conjunto_final_60_entrenamiento[sospechoso4, ]))
cat("------------------------------------------------\n")
# Detalle de las observaciones posiblemente atípicas
sospechosos <- c(sospechoso1, sospechoso2, sospechoso3, sospechoso4)
sospechosos <- sort(unique(sospechosos))
cat("\n\n")
cat("Casos sospechosos\n")
cat("---------------------------------\n")
print(conjunto_final_60_entrenamiento[sospechosos, ])
cat("\n\n")
#rint(resultados[sospechosos, ])
#Verificamos la independencia de los residuos
print(durbinWatsonTest(modelo_final, max.lag = 5))
cat("\n\n")
#Detectamos posibles valores atipicos
plot(modelo_final)
# Obtenemos residuos y las estadisticas
#resultados <- data.frame(respuesta_predicha = fitted(modelo_final))
resultados[["residuos_estandarizados"]] <- rstandard(modelo_final)
resultados[["residuos_estudiantizados"]] <- rstudent(modelo_final)
resultados[["distancia_Cook"]] <- cooks.distance(modelo_final)
resultados[["dfBeta"]] <- dfbeta(modelo_final)
resultados[["dffit"]] <- dffits(modelo_final)
resultados[["apalancamiento"]] <- hatvalues(modelo_final)
resultados[["covratio"]] <- covratio(modelo_final)
# Buscamos las observciones con residuos estandarizados fuera del 95% esperado
sospechoso1 <- which(abs(resultados[["residuos_estandarizados"]]) > 1.96)
sospechoso1 <- sort(sospechoso1)
cat("- Residuos estandarizados fuera del 95% esperado: ", sospechoso1, "\n")
print(rownames(conjunto_final_60_entrenamiento[sospechoso1, ]))
cat("------------------------------------------------\n")
# Buscamos observaciones con distancia de Cook mayor a 1
sospechoso2 <- which(resultados[["distancia_cook"]] > 1)
cat("- Residuos con una distancia de Cook alta:", sospechoso2, "\n")
print(rownames(conjunto_final_60_entrenamiento[sospechoso2, ]))
cat("------------------------------------------------\n")
# Buscamos observaciones con apalancamiento mayor igual al doble o triple del apalacamiento promedio
apal_medio <- (ncol(conjunto_final_60_entrenamiento)) / nrow(muestra_h)
sospechoso3 <- which(resultados[["apalancamiento"]] > apal_medio)
sospechoso3 <- sort(sospechoso3)
cat("- Residuos con apalancamiento fuera del rango (>")
cat(round(apal_medio, 3), ")", "\n", sep = "" )
print(rownames(conjunto_final_60_entrenamiento[sospechoso3, ]))
cat("------------------------------------------------\n")
# Revisar datos con DFbeta >= 1
sospechoso4 <- which(apply(resultados[["dfBeta"]] >= 1, 1, any))
sospechoso4 <- sort(sospechoso4)
names(sospechoso4) <- NULL
cat("- Residuos con DFBeta >= 1:", sospechoso4, "\n")
print(rownames(conjunto_final_60_entrenamiento[sospechoso4, ]))
cat("------------------------------------------------\n")
# Detalle de las observaciones posiblemente atípicas
sospechosos <- c(sospechoso1, sospechoso2, sospechoso3, sospechoso4)
sospechosos <- sort(unique(sospechosos))
cat("\n\n")
cat("Casos sospechosos\n")
cat("---------------------------------\n")
print(conjunto_final_60_entrenamiento[sospechosos, ])
cat("\n\n")
print(resultados[sospechosos, ])
#Verificamos la independencia de los residuos
print(durbinWatsonTest(modelo_final, max.lag = 5))
cat("\n\n")
#Detectamos posibles valores atipicos
plot(modelo_final)
# Obtenemos residuos y las estadisticas
resultados <- data.frame(respuesta_predicha = fitted(modelo_final))
resultados[["residuos_estandarizados"]] <- rstandard(modelo_final)
resultados[["residuos_estudiantizados"]] <- rstudent(modelo_final)
resultados[["distancia_Cook"]] <- cooks.distance(modelo_final)
resultados[["dfBeta"]] <- dfbeta(modelo_final)
resultados[["dffit"]] <- dffits(modelo_final)
resultados[["apalancamiento"]] <- hatvalues(modelo_final)
resultados[["covratio"]] <- covratio(modelo_final)
# Buscamos las observciones con residuos estandarizados fuera del 95% esperado
sospechoso1 <- which(abs(resultados[["residuos_estandarizados"]]) > 1.96)
sospechoso1 <- sort(sospechoso1)
cat("- Residuos estandarizados fuera del 95% esperado: ", sospechoso1, "\n")
print(rownames(conjunto_final_60_entrenamiento[sospechoso1, ]))
cat("------------------------------------------------\n")
# Buscamos observaciones con distancia de Cook mayor a 1
sospechoso2 <- which(resultados[["distancia_cook"]] > 1)
cat("- Residuos con una distancia de Cook alta:", sospechoso2, "\n")
print(rownames(conjunto_final_60_entrenamiento[sospechoso2, ]))
cat("------------------------------------------------\n")
# Buscamos observaciones con apalancamiento mayor igual al doble o triple del apalacamiento promedio
apal_medio <- (ncol(conjunto_final_60_entrenamiento)) / nrow(muestra_h)
sospechoso3 <- which(resultados[["apalancamiento"]] > apal_medio)
sospechoso3 <- sort(sospechoso3)
cat("- Residuos con apalancamiento fuera del rango (>")
cat(round(apal_medio, 3), ")", "\n", sep = "" )
print(rownames(conjunto_final_60_entrenamiento[sospechoso3, ]))
cat("------------------------------------------------\n")
# Revisar datos con DFbeta >= 1
sospechoso4 <- which(apply(resultados[["dfBeta"]] >= 1, 1, any))
sospechoso4 <- sort(sospechoso4)
names(sospechoso4) <- NULL
cat("- Residuos con DFBeta >= 1:", sospechoso4, "\n")
print(rownames(conjunto_final_60_entrenamiento[sospechoso4, ]))
cat("------------------------------------------------\n")
# Detalle de las observaciones posiblemente atípicas
sospechosos <- c(sospechoso1, sospechoso2, sospechoso3, sospechoso4)
sospechosos <- sort(unique(sospechosos))
cat("\n\n")
cat("Casos sospechosos\n")
cat("---------------------------------\n")
#print(conjunto_final_60_entrenamiento[sospechosos, ])
cat("\n\n")
print(resultados[sospechosos, ])
#Verificamos la independencia de los residuos
print(durbinWatsonTest(modelo_final, max.lag = 5))
cat("\n\n")
#Detectamos posibles valores atipicos
plot(modelo_final)
# Obtenemos residuos y las estadisticas
resultados <- data.frame(respuesta_predicha = fitted(modelo_final))
resultados[["residuos_estandarizados"]] <- rstandard(modelo_final)
resultados[["residuos_estudiantizados"]] <- rstudent(modelo_final)
resultados[["distancia_Cook"]] <- cooks.distance(modelo_final)
resultados[["dfBeta"]] <- dfbeta(modelo_final)
resultados[["dffit"]] <- dffits(modelo_final)
resultados[["apalancamiento"]] <- hatvalues(modelo_final)
resultados[["covratio"]] <- covratio(modelo_final)
# Buscamos las observciones con residuos estandarizados fuera del 95% esperado
sospechoso1 <- which(abs(resultados[["residuos_estandarizados"]]) > 1.96)
sospechoso1 <- sort(sospechoso1)
cat("- Residuos estandarizados fuera del 95% esperado: ", sospechoso1, "\n")
print(rownames(conjunto_final_60_entrenamiento[sospechoso1, ]))
cat("------------------------------------------------\n")
# Buscamos observaciones con distancia de Cook mayor a 1
sospechoso2 <- which(resultados[["distancia_cook"]] > 1)
cat("- Residuos con una distancia de Cook alta:", sospechoso2, "\n")
print(rownames(conjunto_final_60_entrenamiento[sospechoso2, ]))
cat("------------------------------------------------\n")
# Buscamos observaciones con apalancamiento mayor igual al doble o triple del apalacamiento promedio
apal_medio <- (ncol(conjunto_final_60_entrenamiento)) / nrow(conjunto_final_60_entrenamiento)
sospechoso3 <- which(resultados[["apalancamiento"]] > apal_medio)
sospechoso3 <- sort(sospechoso3)
cat("- Residuos con apalancamiento fuera del rango (>")
cat(round(apal_medio, 3), ")", "\n", sep = "" )
print(rownames(conjunto_final_60_entrenamiento[sospechoso3, ]))
cat("------------------------------------------------\n")
# Revisar datos con DFbeta >= 1
sospechoso4 <- which(apply(resultados[["dfBeta"]] >= 1, 1, any))
sospechoso4 <- sort(sospechoso4)
names(sospechoso4) <- NULL
cat("- Residuos con DFBeta >= 1:", sospechoso4, "\n")
print(rownames(conjunto_final_60_entrenamiento[sospechoso4, ]))
cat("------------------------------------------------\n")
# Detalle de las observaciones posiblemente atípicas
sospechosos <- c(sospechoso1, sospechoso2, sospechoso3, sospechoso4)
sospechosos <- sort(unique(sospechosos))
cat("\n\n")
cat("Casos sospechosos\n")
cat("---------------------------------\n")
print(conjunto_final_60_entrenamiento[sospechosos, ])
cat("\n\n")
print(resultados[sospechosos, ])
#Verificamos la independencia de los residuos
print(durbinWatsonTest(modelo_final, max.lag = 5))
cat("\n\n")
#Detectamos posibles valores atipicos
plot(modelo_final)
# Obtenemos residuos y las estadisticas
resultados <- data.frame(respuesta_predicha = fitted(modelo_final))
resultados[["residuos_estandarizados"]] <- rstandard(modelo_final)
resultados[["residuos_estudiantizados"]] <- rstudent(modelo_final)
resultados[["distancia_Cook"]] <- cooks.distance(modelo_final)
resultados[["dfBeta"]] <- dfbeta(modelo_final)
resultados[["dffit"]] <- dffits(modelo_final)
resultados[["apalancamiento"]] <- hatvalues(modelo_final)
resultados[["covratio"]] <- covratio(modelo_final)
# Buscamos las observciones con residuos estandarizados fuera del 95% esperado
sospechoso1 <- which(abs(resultados[["residuos_estandarizados"]]) > 1.96)
sospechoso1 <- sort(sospechoso1)
cat("- Residuos estandarizados fuera del 95% esperado: ", sospechoso1, "\n")
print(rownames(conjunto_final_60_entrenamiento[sospechoso1, ]))
cat("------------------------------------------------\n")
# Buscamos observaciones con distancia de Cook mayor a 1
sospechoso2 <- which(resultados[["distancia_cook"]] > 1)
cat("- Residuos con una distancia de Cook alta:", sospechoso2, "\n")
print(rownames(conjunto_final_60_entrenamiento[sospechoso2, ]))
cat("------------------------------------------------\n")
# Buscamos observaciones con apalancamiento mayor igual al doble o triple del apalacamiento promedio
apal_medio <- (ncol(conjunto_final_60_entrenamiento) +1 ) / nrow(conjunto_final_60_entrenamiento)
sospechoso3 <- which(resultados[["apalancamiento"]] > apal_medio)
sospechoso3 <- sort(sospechoso3)
cat("- Residuos con apalancamiento fuera del rango (>")
cat(round(apal_medio, 3), ")", "\n", sep = "" )
print(rownames(conjunto_final_60_entrenamiento[sospechoso3, ]))
cat("------------------------------------------------\n")
# Revisar datos con DFbeta >= 1
sospechoso4 <- which(apply(resultados[["dfBeta"]] >= 1, 1, any))
sospechoso4 <- sort(sospechoso4)
names(sospechoso4) <- NULL
cat("- Residuos con DFBeta >= 1:", sospechoso4, "\n")
print(rownames(conjunto_final_60_entrenamiento[sospechoso4, ]))
cat("------------------------------------------------\n")
# Detalle de las observaciones posiblemente atípicas
sospechosos <- c(sospechoso1, sospechoso2, sospechoso3, sospechoso4)
sospechosos <- sort(unique(sospechosos))
cat("\n\n")
cat("Casos sospechosos\n")
cat("---------------------------------\n")
print(conjunto_final_60_entrenamiento[sospechosos, ])
cat("\n\n")
print(resultados[sospechosos, ])
#Verificamos la independencia de los residuos
print(durbinWatsonTest(modelo_final, max.lag = 5))
cat("\n\n")
#Detectamos posibles valores atipicos
plot(modelo_final)
# Obtenemos residuos y las estadisticas
resultados <- data.frame(respuesta_predicha = fitted(modelo_final))
resultados[["residuos_estandarizados"]] <- rstandard(modelo_final)
resultados[["residuos_estudiantizados"]] <- rstudent(modelo_final)
resultados[["distancia_Cook"]] <- cooks.distance(modelo_final)
resultados[["dfBeta"]] <- dfbeta(modelo_final)
resultados[["dffit"]] <- dffits(modelo_final)
resultados[["apalancamiento"]] <- hatvalues(modelo_final)
resultados[["covratio"]] <- covratio(modelo_final)
# Buscamos las observciones con residuos estandarizados fuera del 95% esperado
sospechoso1 <- which(abs(resultados[["residuos_estandarizados"]]) > 1.96)
sospechoso1 <- sort(sospechoso1)
cat("- Residuos estandarizados fuera del 95% esperado: ", sospechoso1, "\n")
print(rownames(conjunto_final_60_entrenamiento[sospechoso1, ]))
cat("------------------------------------------------\n")
# Buscamos observaciones con distancia de Cook mayor a 1
sospechoso2 <- which(resultados[["distancia_cook"]] > 1)
cat("- Residuos con una distancia de Cook alta:", sospechoso2, "\n")
print(rownames(conjunto_final_60_entrenamiento[sospechoso2, ]))
cat("------------------------------------------------\n")
# Buscamos observaciones con apalancamiento mayor igual al doble o triple del apalacamiento promedio
apal_medio <- (ncol(conjunto_final_60_entrenamiento) +1 ) / nrow(conjunto_final_60_entrenamiento)
sospechoso3 <- which(resultados[["apalancamiento"]] > 2 * apal_medio)
sospechoso3 <- sort(sospechoso3)
cat("- Residuos con apalancamiento fuera del rango (>")
cat(round(apal_medio, 3), ")", "\n", sep = "" )
print(rownames(conjunto_final_60_entrenamiento[sospechoso3, ]))
cat("------------------------------------------------\n")
# Revisar datos con DFbeta >= 1
sospechoso4 <- which(apply(resultados[["dfBeta"]] >= 1, 1, any))
sospechoso4 <- sort(sospechoso4)
names(sospechoso4) <- NULL
cat("- Residuos con DFBeta >= 1:", sospechoso4, "\n")
print(rownames(conjunto_final_60_entrenamiento[sospechoso4, ]))
cat("------------------------------------------------\n")
# Detalle de las observaciones posiblemente atípicas
sospechosos <- c(sospechoso1, sospechoso2, sospechoso3, sospechoso4)
sospechosos <- sort(unique(sospechosos))
cat("\n\n")
cat("Casos sospechosos\n")
cat("---------------------------------\n")
print(conjunto_final_60_entrenamiento[sospechosos, ])
cat("\n\n")
print(resultados[sospechosos, ])
#Verificamos la independencia de los residuos
print(durbinWatsonTest(modelo_final, max.lag = 5))
cat("\n\n")
#Detectamos posibles valores atipicos
plot(modelo_final)
# Obtenemos residuos y las estadisticas
resultados <- data.frame(respuesta_predicha = fitted(modelo_final))
resultados[["residuos_estandarizados"]] <- rstandard(modelo_final)
resultados[["residuos_estudiantizados"]] <- rstudent(modelo_final)
resultados[["distancia_Cook"]] <- cooks.distance(modelo_final)
resultados[["dfBeta"]] <- dfbeta(modelo_final)
resultados[["dffit"]] <- dffits(modelo_final)
resultados[["apalancamiento"]] <- hatvalues(modelo_final)
resultados[["covratio"]] <- covratio(modelo_final)
# Buscamos las observciones con residuos estandarizados fuera del 95% esperado
sospechoso1 <- which(abs(resultados[["residuos_estandarizados"]]) > 1.96)
sospechoso1 <- sort(sospechoso1)
cat("- Residuos estandarizados fuera del 95% esperado: ", sospechoso1, "\n")
print(rownames(conjunto_final_60_entrenamiento[sospechoso1, ]))
cat("------------------------------------------------\n")
# Buscamos observaciones con distancia de Cook mayor a 1
sospechoso2 <- which(resultados[["distancia_cook"]] > 1)
cat("- Residuos con una distancia de Cook alta:", sospechoso2, "\n")
print(rownames(conjunto_final_60_entrenamiento[sospechoso2, ]))
cat("------------------------------------------------\n")
# Buscamos observaciones con apalancamiento mayor igual al doble o triple del apalacamiento promedio
apal_medio <- (ncol(conjunto_final_60_entrenamiento)) / nrow(conjunto_final_60_entrenamiento)
sospechoso3 <- which(resultados[["apalancamiento"]] > apal_medio)
sospechoso3 <- sort(sospechoso3)
cat("- Residuos con apalancamiento fuera del rango (>")
cat(round(apal_medio, 3), ")", "\n", sep = "" )
print(rownames(conjunto_final_60_entrenamiento[sospechoso3, ]))
cat("------------------------------------------------\n")
# Revisar datos con DFbeta >= 1
sospechoso4 <- which(apply(resultados[["dfBeta"]] >= 1, 1, any))
sospechoso4 <- sort(sospechoso4)
names(sospechoso4) <- NULL
cat("- Residuos con DFBeta >= 1:", sospechoso4, "\n")
print(rownames(conjunto_final_60_entrenamiento[sospechoso4, ]))
cat("------------------------------------------------\n")
# Detalle de las observaciones posiblemente atípicas
sospechosos <- c(sospechoso1, sospechoso2, sospechoso3, sospechoso4)
sospechosos <- sort(unique(sospechosos))
cat("\n\n")
cat("Casos sospechosos\n")
cat("---------------------------------\n")
print(conjunto_final_60_entrenamiento[sospechosos, ])
cat("\n\n")
print(resultados[sospechosos, ])
